# NO MACOS AT ALL!

#--------------------------------------------------------------------------------------------------
# Extensions
#--------------------------------------------------------------------------------------------------

# Расширения файлов в зависимости от ОС.
ifeq ($(OS),Windows_NT)
	EXE_EXT := exe
	SLIB_EXT := lib
	DLIB_EXT := dll
else
	EXE_EXT := out
	SLIB_EXT := a
	DLIB_EXT := so
endif



#--------------------------------------------------------------------------------------------------
# Directories and their structure
#--------------------------------------------------------------------------------------------------

# Абсолютный путь до директории с проектом.
#PASSMAN_DIR_PATH ::= $(shell pwd)
PASSMAN_DIR_PATH := /home/leokeo/programming/PassMan_noGit/

# Имена директорий с определёнными файлами.
CPP_DIR := src
OBJ_DIR := obj_files
D_DIR := d_files
H_DIR := header



#--------------------------------------------------------------------------------------------------
# File names
#--------------------------------------------------------------------------------------------------

# Название файла с описанием makefile-команд.
MAKE_REFERENCE_FILE = make_reference.txt



#--------------------------------------------------------------------------------------------------
# Compiler
#--------------------------------------------------------------------------------------------------

# Компилятор, используемы для сборки проекта и тестов.
COMPILER ?= clang++



#--------------------------------------------------------------------------------------------------
# Flags for C++ compilation
#--------------------------------------------------------------------------------------------------

# Флаг стандарта C++ для компиляции проекта и тестов.
CPP_STANDART_FLAG ?= -std=c++20

# Шаблон флагов для объектных файлов.
./$(OBJ_DIR)/%.o : CUR_CPP = ./$(CPP_DIR)/$*.cpp
%.o : COMPILER_FLAGS = -c -g -Wall -Wextra -pedantic $(CPP_STANDART_FLAG) -o $@ -I $(PASSMAN_DIR_PATH)

# Шаблон флагов для файлов зависимостей.
./$(D_DIR)/%.d : CUR_CPP = ./$(CPP_DIR)/$*.cpp
%.d : COMPILER_FLAGS = -I $(PASSMAN_DIR_PATH) -MM -MT './$(OBJ_DIR)/$*.o ./$@' -o $@

# Шаблон флагов для исполняемых файлов.
./%.$(EXE_EXT) : COMPILER_FLAGS = -g -Wall -Wextra -pedantic $(CPP_STANDART_FLAG) -o $@ -I $(PASSMAN_DIR_PATH)



#--------------------------------------------------------------------------------------------------
# RULES
#--------------------------------------------------------------------------------------------------

.PHONY : help _print-%
.DEFAULT_GOAL := help

# Вывод файла-подсказки с описанием функционала 'makefile' системы.
help:
	@echo "\n"
	@cat ../$(MAKE_REFERENCE_FILE)
	@echo "\n\n"

# Печать значения переменной. Для отладки makefile.
_print-%: ; @echo $* = $($*)

# Создание директории для объектных файлов.
$(OBJ_DIR):
	mkdir -p $@

# Создание директории для файлов зависимостей.
$(D_DIR):
	mkdir -p $@



#--------------------------------------------------------------------------------------------------
# CLEAN
#--------------------------------------------------------------------------------------------------

.PHONY : clean clean_dirs clean_d_dir clean_obj_dir

clean: clean_dirs

# Удаление всех вспомагательных директорий с их содержимым.
clean_dirs: clean_d_dir clean_obj_dir

# Удаление директории с объектными файлами.
clean_obj_dir:
	rm -r -f ./$(OBJ_DIR)

# Удаление директории с файлами зависимостей.
clean_d_dir:
	rm -r -f ./$(D_DIR)
